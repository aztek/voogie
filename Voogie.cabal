name: Voogie
version: 0.1.0.0
synopsis: A verification conditions generator for simple Boogie programs
description:
  Voogie reads simple Boogie programs and generates their verification
  conditions as formulas in the FOOL logic. These formulas are written in the
  TPTP language and can be checked by automated first-order theorem provers.
  Currently, only the Vampire theorem prover fully supports FOOL.
homepage: https://github.com/aztek/voogie
bug-reports: https://github.com/aztek/voogie/issues
license: GPL-3
license-file: LICENSE
author: Evgenii Kotelnikov
maintainer: evgeny.kotelnikov@gmail.com
category: Language
build-type: Simple
extra-source-files: README.md
cabal-version: >= 1.10
tested-with: GHC >= 7.10

source-repository head
  type: git
  location: git://github.com/aztek/voogie.git

flag Werror
  default: False
  manual: True

executable voogie
  hs-source-dirs: src
  main-is: Main.hs
  other-modules:
    Paths_Voogie
    Voogie.AST
    Voogie.Back
    Voogie.Boogie
    Voogie.BoogieSyntax
    Voogie.Boogie.AST
    Voogie.Boogie.Parse
    Voogie.Boogie.BoogiePretty
    Voogie.Boogie.Smart
    Voogie.CmdArgs
    Voogie.Error
    Voogie.FOOL
    Voogie.FOOL.ArrayTheory
    Voogie.FOOL.AST
    Voogie.FOOL.Tuple
    Voogie.FOOL.TypeSafe
    Voogie.FOOL.TPTPretty
    Voogie.FOOL.Parse
    Voogie.FOOL.BoogiePretty
    Voogie.FOOL.Rewrite
    Voogie.FOOL.Smart
    Voogie.Front
    Voogie.NonEmpty
    Voogie.Parse
    Voogie.Pretty
    Voogie.BoogiePretty
    Voogie.Theory
    Voogie.TPTP
    Voogie.TPTPretty
    Voogie.TPTPSyntax
  default-extensions:
    DeriveFunctor, DeriveFoldable, DeriveTraversable,
    FlexibleInstances, LambdaCase, PatternGuards
  ghc-options: -Wall -fno-warn-missing-signatures -threaded
  if flag(Werror)
    ghc-options: -Werror
  build-depends:
    base >= 4 && < 5,
    containers >= 0.5,
    extra >= 1.4,
    mtl >= 2.2 && < 3.0,
    parsec >= 3.1 && < 3.2,
    optparse-applicative >= 0.14,
    ansi-terminal >= 0.4.0 && < 0.9,
    ansi-wl-pprint >= 0.6.6 && < 0.7,
    unix >= 2.7 && < 2.8
  default-language: Haskell2010
  if impl(ghc < 8)
    ghc-options: -fno-warn-name-shadowing -fno-warn-orphans
    build-depends: semigroups >= 0.18
  if impl(ghc >= 8)
    ghc-options: -Wno-name-shadowing -Wno-orphans
    default-extensions: Safe

test-suite test-idempotent-parsing-pretty-printing
  type: exitcode-stdio-1.0
  main-is: tests/IdempotentParsingPrettyPrinting.hs
  build-depends:
    base >= 4 && < 5,
    process
  default-language: Haskell2010

test-suite test-quickcheck-generators
  type: exitcode-stdio-1.0
  hs-source-dirs: src, tests
  main-is: Generators.hs
  ghc-options:
    -main-is Generators
  if flag(Werror)
    ghc-options: -Werror
  other-modules:
    Voogie.Boogie
    Voogie.FOOL
    Voogie.FOOL.Tuple
    Voogie.NonEmpty
    Voogie.Theory
  default-extensions:
    DeriveFunctor, DeriveFoldable, DeriveTraversable,
    FlexibleInstances, LambdaCase, PatternGuards
  build-depends:
    base >= 4 && < 5,
    QuickCheck
  if impl(ghc < 8)
    build-depends: semigroups >= 0.18
  default-language: Haskell2010

test-suite test-quickcheck-back
  type: exitcode-stdio-1.0
  hs-source-dirs: src, tests
  main-is: Back.hs
  ghc-options:
    -main-is Back
  other-modules:
    Generators
    Voogie.Back
    Voogie.Boogie
    Voogie.Boogie.BoogiePretty
    Voogie.BoogiePretty
    Voogie.BoogieSyntax
    Voogie.FOOL
    Voogie.FOOL.ArrayTheory
    Voogie.FOOL.BoogiePretty
    Voogie.FOOL.Rewrite
    Voogie.FOOL.Smart
    Voogie.FOOL.Tuple
    Voogie.FOOL.TypeSafe
    Voogie.NonEmpty
    Voogie.Pretty
    Voogie.Theory
  default-extensions:
    DeriveFunctor, DeriveFoldable, DeriveTraversable,
    FlexibleInstances, LambdaCase, PatternGuards
  build-depends:
    base >= 4 && < 5,
    ansi-wl-pprint >= 0.6.6 && < 0.7,
    QuickCheck
  if impl(ghc < 8)
    build-depends: semigroups >= 0.18
  default-language: Haskell2010
